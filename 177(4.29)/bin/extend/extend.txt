1.继承(extends)
   a) 生活中继承：对象与对象之间的继承。  
    OOP: 类与类之间的继承。
    is a(是):   单选题是选择题  多选题是选择题
                               狗是动物    泰迪 是狗    
         子类(派生类)： 单选题 多选题
         父类(基类)： 选择题 
   b)继承语法:
     public class A extends B{}  
   c)OOP的设计原则：高内聚 低耦合
             高内聚:一个类只做一件事情
             低耦合：类与类之间关系 尽量松散。 
   d)继承的特征
      (1)只能有一个父类。(Java是单继承)
      (2)子类继承父类中的非private修饰的属性和方法。          
      (3)子类被初始化之前父类会先被初始化。
      (4)若子类中没有显示调用父类构造器，那么会在javac阶段自动
      在第一行加上父类无参构造器的调用。
2 关键字 this 和super
   this：指代的是当前对象的堆区的首地址。只能在类的内部访问属性和方法。
   super:在子类中保存在堆区中父对象的首地址，只能在子类中访问父类的属性和方法。
         (前提属性和方法 被非private修饰)
         
   super() 调用父类的构造器
   this(); 调用子类的构造器
   
   注意:1)调用构造器使用this或super都必须写在第一行。
      2)调用构造器this 和super不能同时出现。
  
   
3.多态
  a.多态分类
     (1)行为多态
         (a)方法重载: 方法名相同  参数不同(个数 类型)
                        实现方式：1)在同一个类中
                      2)在父类和子类中  
                 注意：与修饰符 返回值无关。   
         (b)方法重写: (1)方法名相同 (2)参数必须相同 
         			 (3)子类的修饰符必须大于等于父类的修饰符范围。 
                 注意：1)存在继承关系
     (2)引用多态: 使用父类定义的变量指向子类创建的对象。
        
     补充：动态绑定: 编译时检查语法与执行过程中调用的方法不一致。
       
4 引用类型转换
     回顾简单数据类型转换：
        a)自动转换:小类型 向大类型转换 
        b)强制转换:大类型 向小类型转换
        简单数据类型大小 :参考这个类型表达的数据范围。
  a)隐式转换:(自动转换) 小类型 向大类型转换
      
  b)强制转换:大类型 向小类型转换
      引用数据类型大小: 参考类型表达的范围
    注意: 强制换转换的是类型 不是对象

5)instanceof关键字 
   a)是一个运算符 。用来检查对象的类型
     语法: 引用 instanceof 类    结果是一个boolean值  
  
  
  
  
     
         
     
    


      
      
      
      
      
      