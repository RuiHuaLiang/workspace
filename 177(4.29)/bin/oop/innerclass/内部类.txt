内部类
 1.概念： 在一个类中定义另外一个类。
 2.内部类分类： 根据内部类的位置划分
     (a)静态内部类
     (b)成员内部类
     (c)局部内部类
     (d)匿名内部类
 3.内部类详解
    a)静态内部类:在类中，以成员变量的形式存在，同时被static修饰
      (1) 语法:
         static class 类名{//类体} 
      (2)特性： 
         a)在静态内部类中访问外部类的成员，成员必须是static修饰的。
         b)静态内部类的实例化的方式
            Goo.Foo f = new Goo.Foo();
         c)静态内部类可以被访问控制符修饰 只是作用范围不同。
         d)静态内部类可以访问外部类的方法，但是外部类的方法必须是static修饰。
    注意：内部类编译之后会生产两个class文件。 外部类一个文件: 类名.class
             内部类也生成一个文件: 外部类$内部类.class     
    b)成员内部类： 以成员变量形式存在的类。
       (1)语法：
          class 类名{//类体}
       (2)特性：
          a)可以访问外部类的静态成员和非静态成员。
          b)无法直接在外部类实例化
          c)可以被访问控制符修饰。
          d)可以定义为抽象类
          e)可以实现抽象类，实现对应的抽象方法
     c)局部内部类： 类以局部变量的方式出现在方法中。
        1)特性：
           a)访问据变量，变量需要使用final修饰。但是成员不需要。
           b)实例化是有范围的。只能在当前这个方法中使用。
           c)和变量一样存在作用域，在方法结束内部类的对象就会被销毁。
           d)只能被[default]修饰，不能使用private,public,protected修饰。
     d)匿名内部类： 没有名字的类。出现在外部类的任何地方。
        1)特性：
          a)它是没有名字的类，一般依赖于接口，抽象类，类定义的。匿名内部类
             中可以定义方法和属性。
          b)没有构造器，因为它没有名字。
          c)它可以实现接口，继承类和抽象类。
       注意：1)匿名内部类也会编译成一个独立class文件。
         2)一般用来封装。
            
          
         
         
         
           